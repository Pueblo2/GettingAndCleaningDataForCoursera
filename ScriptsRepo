Here's my run_analysis script for this exercise.
## run_analysis.R (4th one)  don't forget to get the reshape2 package and update dependencies

library(reshape2)

## setwd("~/UCI HAR Dataset")

## I made things very simple by creating the directories on my desktop but let's pretend we had to go to the web
## download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", 
##    destfile = "getdata-projectfiles-UCI HAR Dataset.zip", 
##    method = "curl")
##    unzip(zipfile = "getdata-projectfiles-UCI HAR Dataset.zip")

DATASET <- "UCI HAR Dataset"
  
## Use activity names not integers
activities <- read.table(file= paste(DATASET, "activity_labels.txt", sep = "/"), 
    col.names = c("Activity.ID", "Activity.Name"))
y_test <- read.table(paste(DATASET, "test", "y_test.txt",        sep = "/"),
    col.names = c("Activity.ID"))
y_activities <- merge(y_test, activities, by.x="Activity.ID", by.y="Activity.ID")
Activity <- y_activities[,2]

## Use column names 
features <- read.table(paste(DATASET, "features.txt", sep ="/"), 
    col.names = c("Feature.Number", "Feature.Name"))
features     <- features[,2]

## Subject dataframe
subject_test <- read.table(file = paste(DATASET, "test", "subject_test.txt", sep = "/"),
    col.names = c("Subject"))

## Test Data
x_test <- read.table(file = paste(DATASET, "test", "X_test.txt", sep = "/"),
    col.names = features)

## Combine the dataframes
test_data    <- cbind(subject_test, Activity, x_test)

## Combine Training Data

y_train <- read.table(paste(DATASET, "train", "y_train.txt",        sep = "/"),
    col.names = c("Activity.ID"))
y_activities <- merge(y_train, activities, by.x="Activity.ID", by.y="Activity.ID")
Activity <- y_activities[,2]

subject_train <- read.table(file = paste(DATASET, "train", "subject_train.txt", sep = "/"),
    col.names = c("Subject"))
x_train <- read.table(file = paste(DATASET, "train", "X_train.txt", sep = "/"),
    col.names = features)

train_data <- cbind(subject_train, Activity, x_train)

## Train/Test data selected

data <- rbind(test_data, train_data)

## Get the columns with mean and standard deviations

data_mean_std <- data[,c("Subject",
    "Activity",
    grep("mean|std", colnames(data), value=TRUE))
     ]

subject_activity_data  <- melt(data_mean_std, id.vars=c("Subject","Activity"))

## Calculate the variables averages
tidy_data     <- dcast(subject_activity_data, Subject + Activity ~ variable, mean)

## send the tidy_data to a file

write.table(tidy_data, row.name=FALSE, file = "tidy_data.txt")

cat(names(tidy_data), sep="\n")

## Use View(tidy_data) ... looks nicer in R Studio viewing pane than standard R
